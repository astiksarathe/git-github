Reflogs (Reference Logs)
    Git keeps a record of when the tips of branches
    and other references were updated in the repo.

    We can view and update these references logs using 
    the git reflog command

    This logs are saved in Logs->HEAD file

Limitation 
    Git only keeps Reflogs on your local activity.
    They are not shared woth collaborators.

    reflog are expired. Git cleans out old entried
    after around 90 days. though this can be configured.



Git Reflog
    The "git reflog" command accepts subcommands show, expire, delete and exists.
    Show is the only commonly used variant, and it is the default subcommand.

    "git reflog show" will show the log of a specific reference (it defaults to HEAD)

    For example, to view the logs for the tip of the main branche
    we could run "git reflog show main" 

Reflog Reference
    We can access specific git refs is "branch-name@{qualifier}". We can use this syntax
    to access specific ref pointers and can pass them to 
    other commands including checkout, reset, and merge

    Ex: git checkout HEAD@{1}, git reflog show HEAD@{10}



Key Differences:
    1) git log shows a list of commits in a repository's history.
    2) git reflog tracks changes made to references (like branches) 
       and helps recover lost work or commits.

Time References
    Every entry in the reference logs had a timestamp associated with
    it. We can filter reflogs entries by time/date by using time 
    qualifier like:

    1) 1.day.ago (git diff main main@{1.day.ago})
    2) one.day.ago (git diff main main@{one.day.ago})
    3) 5.minutes.ago (git reflog main@{5.minutes.ago})
    4) yesterday (git checkout main@{yesterday})
    5) one.month.ago (git diff main main@{one.month.ago})
    6) one.week.ago (git checkout main@{one.week.ago})
    7) 1.week.ago (git checkout main@{1.week.ago})


git reset --hard main@{1}
    The command "git reset --hard main@{1}" will remove the changes 
    made after a specific point in the commit history. 
    I obtained the reference "main@{1}" using the "git reflog" command.

